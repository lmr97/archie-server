name: archie
services:
  svr:
    # separately-built img to avoid clutter from anon imgs
    image: archie-svr:lb-app
    ports:
      - "4949:4949"
    # if running with sudo, use the --preserve-env option
    # so that your user shell env is in scope
    environment:
      # DB host needs to be CONTAINER name not service name
      DB_URL: mysql://server1:${MYSQL_PASSWORD?}@archie-db:3306/archie
      RUST_LOG: "archie_server=debug"   # for `tracing` logger
      PY_CONT_SOCK: "lb-app:3575"
    command: ["./target/release/archie-server", "--no-tls"]
    # allows web content to be hot-swapped, without rebuild
    volumes:
      - type: bind
        source: ./archie-server.log
        target: /home/server/archie-server.log
      - type: bind
        source: ./pages
        target: /home/server/pages
      - type: bind
        source: ./static
        target: /home/server/static
      - type: bind
        source: ./node_modules
        target: /home/server/node_modules
    secrets:
      - server-cert
      - server-priv-key

  db:
    image: "mysql:9.2"
    container_name: "archie-db"
    volumes:
      - type: bind
        source: "./db-init/"
        # all scripts in this directory will be run
        target: "/docker-entrypoint-initdb.d"
      - type: bind
        source: "./backup_on_exit.sh"
        target: "/backup_on_exit.sh"
    entrypoint: ["bash", "backup_on_exit.sh"]
    command: "mysqld"
    environment:
        MYSQL_ONETIME_PASSWORD: false
        MYSQL_ALLOW_EMPTY_PASSWORD: false
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD?}
        MYSQL_PASSWORD: ${MYSQL_PASSWORD?} 

  lb-app:
    build: ./letterboxd_get_list
    container_name: "lb-app"
    volumes:
      - type: bind
        source: "./letterboxd_get_list/valid-lb-attrs.txt"
        target: "/valid-lb-attrs.txt"

secrets:
  server-cert:
    environment: "CRT_FILE"
  server-priv-key:
    environment: "PK_FILE"

