name: archie
services:
  svr:
    # separately-built image to avoid clutter from anonymous images
    image: archie-svr:latest
    restart: always
    depends_on:
      - db
      - lb-app
    ports:
      - "4949:4949"
    # if running with sudo, use the --preserve-env option
    # so that your user shell env is in scope
    environment:
      # DB host needs to be CONTAINER name not service name
      PRE_LOG: 1
      DB_URL: mysql://server1:${MYSQL_PASSWORD:?}@archie-db:3306/archie
      RUST_LOG: "archie_server=debug"   # for `tracing` logger
      PY_CONT_SOCK: "lb-app:3575"
    healthcheck:
      test: [ "CMD", "curl", "--fail", "--cacert", "/run/secrets/testing-client-key", "https://localhost:4949" ]
      interval: 30s
      retries: 5
      start_period: 2s
    volumes:
      - type: bind
        source: ./archie-server.log
        target: /home/server/archie-server.log
      - type: bind
        source: ./pages
        target: /home/server/pages
      - type: bind
        source: ./static
        target: /home/server/static
      - type: bind
        source: ./node_modules
        target: /home/server/node_modules
    secrets:
      - server-cert
      - server-priv-key
      - testing-client-key

  db:
    image: "mysql:9.2"
    restart: always
    container_name: "archie-db"
    volumes:
      - type: bind
        source: "./db-init/"
        # all scripts in this directory will be run
        target: "/docker-entrypoint-initdb.d"
      - type: bind
        source: "./backup_on_exit.sh"
        target: "/backup_on_exit.sh"
    entrypoint: ["bash", "backup_on_exit.sh"]
    command: "mysqld"
    healthcheck:
      # slight breach of exec form with the options, but `mysqladmin` does not work otherwise
      test: [ "CMD", "mysqladmin", "ping", "--user=server1", "--password=${MYSQL_PASSWORD?}" ]
      interval: 15s
      retries: 3
      start_period: 1m
    environment:
        MYSQL_ONETIME_PASSWORD: false
        MYSQL_ALLOW_EMPTY_PASSWORD: false
        MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?}   # non-priv user created after startup

  lb-app:
    build: ./lb-app
    container_name: "lb-app"
    restart: always

secrets:
  server-cert:
    environment: "CRT_FILE"
  server-priv-key:
    environment: "PK_FILE"
  testing-client-key:
    environment: "CLIENT_PK_FILE"

