name: Archie CI

on:
  push:
    branches: [ "main", "testing" ]

jobs:

  server_tests:

    runs-on: ubuntu-latest
    env:
      EX_VAR: "a value/here"      # an env var to test env fetches
      SERVER_SOCKET: "127.0.0.1:4321"
      MYSQL_USER: server1
      MYSQL_PASSWORD: the-pass
      PRE_LOG: 1                  # suppressed initial stdout, for backgrounding
      DB_URL: "mysql://${MYSQL_USER}:${MYSQL_PASSWORD}@127.0.0.1:3306/archie"

    defaults:
      run:
        shell: bash
        working-directory: ./custom-backend

    steps:
    - uses: actions/checkout@v4
    - name: Set up MySQL database
      # uses demo db, identical to real db except in content
      # running this first so that the database can initialize while
      # the server builds 
      run: 
        docker compose 
        --file ../compose-demo.yaml 
        --file ../test-helpers/testing-override.yaml
        up 
        --detach db
    - name: Show db url
      run: echo $DB_URL && sleep 10
    - name: Server unit tests
      run: |
        echo > test.log
        cargo test --lib
        cargo test --test tls_on_default --
        cargo test --test tls_off_switch -- --no-tls
    - name: Server integration tests
      run: |
        echo "developing these tests..."
    - name: Test DB's dump-on-exit (shutdown and prelim check)
      # the dump did not occur if the dump file is:
      # - empty,
      # - identical to the backup file, or
      # - is missing any of the following combinations of the matrix defined above
      run:
        docker compose down
        diff ../db-init-demo/db_schema.sql ../db-init-demo/db_schema.sql.bkup && exit 1
    - name: Test DB's dump-on-exit (detailed check)
      run: |
        cat ../db-init-demo/db_schema.sql | grep "CREATE TABLE `guestbook`"
        cat ../db-init-demo/db_schema.sql | grep "INSERT INTO `guestbook`"
        cat ../db-init-demo/db_schema.sql | grep "CREATE TABLE `hitLog`"
        cat ../db-init-demo/db_schema.sql | grep "INSERT INTO `hitLog`"
