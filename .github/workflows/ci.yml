name: Archie CI

# Tests are currently incomplete. See notes near end for 
# planned tests.

on:
  push:
    branches: [ "testing" ]

env:
  EX_VAR: "a value/here"           # an env var to test env fetches
  SERVER_SOCKET: "127.0.0.1:4321"
  SERVER_LOG: "test.log"
  SERVER_ROOT: "/home/runner/work/archie-server/archie-server"
  CLIENT_SOCKET: "127.0.0.1:4321"  # may need different sock, since reqwest parses IPs differently
  PRE_LOG: 0                       # suppressed initial stdout, for backgrounding
  MYSQL_PASSWORD: thepass          # not real pw; doesnt matter for testing
  MYSQL_ROOT_PASSWORD: root
  DB_URL: "mysql://server1:thepass@127.0.0.1:3306/archie"
  PY_CONT_SOCK: "127.0.0.1:3575"
  PK_FILE: "./certs/server.key"    # will be installed during runtime
  CRT_FILE: "./certs/server.pem"
  CLIENT_PK_FILE: "./certs/client.pem"

jobs:

  web_server_tests:

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./custom-backend

    steps:
    - uses: actions/checkout@v4
    - name: Set up MySQL database
      # uses demo db, identical to real db except in content
      # running this first so that the database can initialize while
      # the server builds 
      run: |
        cd ..
        docker compose --file compose.yaml \
        --file test-helpers/db-override.yaml up \
        --detach db
    - uses: actions/setup-python@v5
      with:
        python-version: '3.13' 
    - name: Start mock Python app
      run: python ../test-helpers/mock_lb_app.py &
    - uses: actions-rs/toolchain@v1
      with: 
        profile: minimal
        toolchain: stable
        override: true
    - uses: actions/setup-node@v4
      with: 
        node-version: 23.7.0
    - name: Server unit tests
      run: |
        npm install vite
        echo > test.log
        cargo test --release --lib -- --test-threads=1
        cargo test --release --test tls_on_default --
        cargo test --release --test tls_off_switch -- --no-tls
    - name: Server integration tests (no TLS)
      run: |
        (./target/release/archie-server --no-tls > /dev/null) &
        cargo test --release --test integ_* -- --no-tls
        killall archie-server
    # uses a brilliantly simple Python module called `trustme`
    # that generates self-signed certificates.
    # from here: https://github.com/python-trio/trustme
    - name: Set up self-signed certificates
      run: |
        pip install -U trustme
        mkdir certs
        cd certs
        python -m trustme
    - name: Server integration tests (with TLS)
      run: |
        (./target/release/archie-server > /dev/null) &
        cargo test --release --test integ_*
        killall archie-server
        killall python
    - name: Test DB's dump-on-exit
      run: |
        cd ..
        docker compose down
        bash test-helpers/validate-dump.sh
  
  letterboxd_app_tests:

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: ./lb-app/letterboxd_get_list

    steps:
    - uses: actions/checkout@v4
      with: 
        submodules: recursive
    - uses: actions/setup-python@v5
      with:
        python-version: '3.13' 
    - name: Install module and dependencies
      run: |
        pip install ./letterboxd_list[testing]
    - name: Run tests on letterboxd_list module
      run: pytest --ignore=./letterboxd_list/tests/test_cli.py --cov -v
    - name: Run tests on app's I/O driver
      # tests and config are in outer directory
      run: |
        cd ..
        pytest -v --cov --cov-report=term-missing
  

  frontend_tests:
  
    runs-on: ubuntu-latest
    defaults:
      run: 
        shell: bash

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
      - uses: denoland/setup-deno@v2
        with: 
          node-version: 23.7.0
          deno-version: 2.3.5
      - name: Environment setup
        run: npm install
      - name: Vitest tests
        run: |
          deno --allow-env --allow-net --allow-read test-helpers/mini-lb-server.mock.ts &
          npx vitest --run --coverage
  
  whole_project_integration_tests:

    # strategy:
    #   fail-fast: true
    #   matrix:
    #     os: [windows-latest, ubuntu-latest, macos-latest]
  
    runs-on: ubuntu-latest #${{ matrix.os }}
    #needs: [web_server_tests, letterboxd_app_tests, frontend_tests]

    defaults:
      run:
        shell: bash
        working-directory: ./webdriver-tests
    env:
      DOCKER_SERVER_URL: "http://archie-svr-1:4949"  # start with HTTP, switch out later
      # will be installed during runtime
      PK_FILE: "/home/runner/work/archie-server/archie-server/certs/server.key" 
      CRT_FILE: "/home/runner/work/archie-server/archie-server/certs/server.pem"
      CLIENT_PK_FILE: "/home/runner/work/archie-server/archie-server/certs/client.pem"
      DISPLAY: ":99"

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.13' 
      # put in repo root because that's where the server's
      # Docker Compose command is run from
      - name: Generate certificates
        run: |
          cd ..
          pip install trustme
          mkdir certs
          cd certs
          python -m trustme
          cd -
      - name: Spin up Docker pod (no TLS)
        run: |
          cd ..
          touch archie-server.log
          sudo chmod 666 archie-server.log
          docker compose \
            --file compose.yaml \
            --file test-helpers/tls-override.yaml \
            --file test-helpers/db-override.yaml up \
            --detach
          cd -
      - name: Check on server
        run: docker logs archie-svr-1
      - name: Launch browser containers
        run: docker compose --file selenium-grid.yaml up --detach

      - name: Run integrations tests (no TLS)
        run: |
          pip install -r requirements.txt
          pytest --verbose
      - name: Spin up Docker pod (with TLS)
        run: |
          cd ..
          docker compose down \
          export DOCKER_SERVER_URL="https://archie-svr-1:4949" \
          docker compose \
            --file compose.yaml \
            --file test-helpers/db-override.yaml up 
            --detach
          cd -
      - name: Run integrations tests (with TLS)
        run: pytest --verbose